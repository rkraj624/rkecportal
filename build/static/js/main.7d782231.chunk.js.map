{"version":3,"sources":["redux/actionTypes.js","redux/validation/is-empty.js","redux/reducer/facultyReducer.js","redux/reducer/adminReducer.js","redux/reducer/studentReducer.js","redux/reducer/errorReducerHelper.js","redux/reducer/errorReducer.js","redux/reducer/rootReducer.js","redux/store.js","redux/utils/setAuthToken.js","redux/action/facultyAction.js","redux/action/adminAction.js","redux/action/studentAction.js","Pages/Admin/LoginPage.jsx","Pages/Admin/AdminHomeHelper.jsx","Pages/Admin/AdminAddStudent.jsx","Pages/Admin/AdminAddFaculty.jsx","Pages/Admin/AdminAddSubject.jsx","Pages/Admin/AdminAddAdmin.jsx","Pages/Admin/AdminGetAllFaculty.jsx","Pages/Admin/AdminGetAllStudents.jsx","Pages/Admin/AdminGetAllSubjects.jsx","Pages/Admin/AdminHome.jsx","Pages/Caraousel.jsx","Pages/Footer.jsx","Pages/EventNews.jsx","Pages/Faculty/FacultyStudentLoginPags.jsx","Pages/Faculty/FacultyHomeHelper.jsx","Pages/Faculty/FacultyUpdatePassword.jsx","Pages/Faculty/FacultyInterface.jsx","Pages/Faculty/AttendenceFaculty.jsx","Pages/Faculty/FacultyUploadMarks.jsx","Pages/Faculty/FacultyUpdateProfile.jsx","Pages/Student/StudentHomeHelper.jsx","Pages/Student/StudentHome.jsx","Pages/Student/StudentAttendencePage.jsx","Pages/Student/StudentUpdatePassword.jsx","Pages/Student/StudentUpdateProfile.jsx","Pages/Student/StudentSubjectList.jsx","Pages/Student/StudentTestPerformance.jsx","Pages/ForgotPassword.jsx","App.js","index.js"],"names":["SET_ERRORS","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","faculty","flag","updateProfileFlag","allSubjectCodeList","fetchedStudents","fetchedStudentsHelper","facultyReducer","state","action","type","payload","admin","adminAddFacultyFlag","adminAddStudentFlag","adminAddAdminFlag","adminAddSubjectFlag","allSubject","allFaculty","allStudent","adminReducer","student","allSubjects","attendence","allMarks","studentReducer","setErrorsHelper","setErrors","combineReducers","error","errorReducer","errorHelper","errorReducerHelper","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setFaculty","data","url","fetchStudentsHelper","subjectCodeListHelper","fetchStudents","department","year","section","dispatch","a","method","result","subjectCode","response","facultyUpdateProfileFlag","facultyUpdate","updatedData","console","log","message","facultyLogout","localStorage","removeItem","setAdmin","adminGetAllFacultyHelper","adminGetAllStudentHelper","adminGetAllSubjectHelper","adminLogout","setStudent","getAllSubjectsHelper","fetchAttendenceHelper","getMarksHelper","studentUpdate","studentLogout","LoginPage","useSelector","useDispatch","useState","registrationNumber","setRegistrationNumber","password","setPassword","setError","isLoading","setIsLoading","history","useHistory","useEffect","push","className","id","noValidate","onSubmit","e","adminCredential","preventDefault","setItem","decoded","jwt_decode","placeholder","onChange","target","classnames","class","role","Home","name","setName","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","toUpperCase","style","listStyle","onClick","AdminAddStudent","email","setEmail","setDepartment","setYear","setSection","dob","setDob","gender","setGender","studentMobileNumber","setContactNumber","fatherName","setFatherName","fatherMobileNumber","setFatherContactNumber","aadharCard","setAadharCard","AdminHomeHelper","studentCredential","split","reverse","join","alert","htmlFor","required","AdminAddFaculty","designation","setDesignation","facultyMobileNUmber","setFacultyMobileNumber","facultyCredential","AdminAddSubject","subjectName","setSubjectName","setSubjectCode","totalLectures","setTotalLectures","subjectCredential","AdminAddAdmin","contactNumber","adminCredentails","AdminGetAllFaculty","form-inline","adminGetAllFaculty","scope","map","res","index","key","joiningYear","searchCredentials","AdminGetAllSubjects","adminGetAllSubject","AdminHome","width","src","avatar","alt","Caraousel","clipPath","height","autoPlay","infiniteLoop","showStatus","showThumbs","showIndicators","showArrows","Footer","backgroundColor","EventNews","data-bs-toggle","data-bs-target","aria-labelledby","data-bs-parent","FacultyStudentLoginPags","facultyRegNum","setFacultyRegNum","facultyPassword","setFacultyPassword","studentRegNum","setStudentRegNum","studentPassword","setStudentPassword","errors","errorsHelper","isFacultyLoading","setIsFacultyLoading","isStudentLoading","setIsStudentLoading","useRef","tabindex","aria-hidden","data-dismiss","padding","tabIndex","href","FacultyUpdatePassword","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","FacultyHomeHelper","passwordData","classNameName","FacultyInterface","facultyMobileNumber","AttendenceFaculty","checkedValue","setCheckedValue","isLoading2","setIsLoading2","handleInputChange","tempCheck","checked","indexOf","splice","selectedStudents","markAttendence","subjectCodeName","obj","_id","FacultyUploadMarks","marks","setMarks","totalMarks","setTotalMarks","exam","setExam","setErrorHelper","uploadMarks","newMarks","findIndex","m","withRouter","setAvatar","formHandler","formData","FormData","append","accept","files","img","StudentHomeHelper","batch","maxHours","lectureAttended","absentHours","totalLecturesByFaculty","StudentUpdatePassword","setModal","StudentSubjectList","StudentTestPerformance","CycleTest1","subject","CycleTest2","Semester","toFixed","props","user","setUser","otp","setOtp","helper","setHelper","match","params","newPasswordWithOtp","submitOTPStudent","submitOTPFaculty","studentEmail","getOTPFaculty","aria-describedby","window","facultyJwtToken","currentTime","Date","now","exp","location","studentJwtToken","setStudentUser","adminJwtToken","setAdminUser","App","exact","path","component","facultyInterface","AdminGetAllStudent","AdminGetAllSubject","StudentUpdateProfile","StudentAttendencePage","StudentTestPerformace","FacultyUpdateProfile","ForgotPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d782231.chunk.js","sourcesContent":["//ERROR\nexport const SET_ERRORS = \"SET_ERRORS\"\nexport const SET_ERRORS_HELPER = \"SET_ERRORS_HELPER\"\nexport const SET_FLAG = \"SET_FLAG\"\n\n//ADMIN\nexport const SET_ADMIN = \"SET_ADMIN\"\nexport const GET_SUBJECTS = \"GET_SUBJECTS\"\n\n\n\n//FACULTY\nexport const SET_FACULTY = \"SET_FACULTY\"\nexport const FACULTY_UPDATE_PASSWORD = \"FACULTY_UPDATE_PASSWORD\"\n\n//STUDENT\nexport const SET_STUDENT = \"SET_STUDENT\"\nexport const STUDENT_UPDATE_PASSWORD = \"STUDENT_UPDATE_PASSWORD\"\nexport const SET_OTP = \"SET_OTP\"\n\n\n","const isEmpty = value =>\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;\n","\nimport { SET_FACULTY } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    faculty: {},\n    flag: false,\n    updateProfileFlag: false,\n    allSubjectCodeList: [],\n    fetchedStudents: [],\n    fetchedStudentsHelper: true\n}\n\n\nconst facultyReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FACULTY: {\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                faculty: action.payload\n            }\n        }\n        case \"FETCH_STUDENTS\": {\n            return {\n                ...state,\n                fetchedStudentsHelper: false,\n                fetchedStudents: action.payload\n            }\n        }\n        case \"FACULTY_UPDATE_PROFILE_FLAG\": {\n            return {\n                ...state,\n                updateProfileFlag: action.payload\n            }\n        }\n        case \"GET_SUBJECTCODE_LIST\": {\n            return {\n                ...state,\n                allSubjectCodeList: action.payload\n            }\n        }\n        case \"HELPER\": {\n            return {\n                ...state,\n                fetchedStudentsHelper: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default facultyReducer","\nimport { SET_ADMIN, GET_SUBJECTS } from '../actionTypes'\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    admin: {},\n    adminAddFacultyFlag: false,\n    adminAddStudentFlag: false,\n    adminAddAdminFlag: false,\n    adminAddSubjectFlag: false,\n    allSubject: {},\n    allFaculty: [],\n    allStudent: [],\n    allSubject: []\n}\n\n\n\n\n\n\nconst adminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ADMIN: \n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                admin: action.payload\n            }\n        case GET_SUBJECTS: {\n            return {\n                ...state,\n                allSubject: action.payload\n            }\n        }\n        case \"ADMIN_ADD_FACULTY_FLAG\": {\n            return {\n                ...state,\n                adminAddFacultyFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_STUDENT_FLAG\": {\n            return {\n                ...state,\n                adminAddStudentFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_SUBJECT_FLAG\": {\n            return {\n                ...state,\n                adminAddSubjectFlag: action.payload\n            }\n        }\n        case \"ADMIN_ADD_ADMIN_FLAG\": {\n            return {\n                ...state,\n                adminAddAdminFlag: action.payload\n            }\n        }\n        case \"GET_ALL_FACULTY\": {\n            return {\n                ...state,\n                allFaculty: action.payload\n            }\n        }\n        case \"GET_ALL_STUDENT\": {\n            return {\n                ...state,\n                allStudent: action.payload\n            }\n        }\n        case \"GET_ALL_SUBJECT\": {\n            return {\n                ...state,\n                allSubject: action.payload\n            }\n        }\n        default:\n            return state\n    }\n}\n\n\n\nexport default adminReducer","import { SET_STUDENT, SET_OTP, SET_FLAG } from '../actionTypes'\n\nimport isEmpty from '../validation/is-empty'\n\nconst initialState = {\n    isAuthenticated: false,\n    student: {},\n    flag: false,\n    allSubjects: [],\n    attendence: [], \n    allMarks: {}\n}\n\n\nconst studentReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_STUDENT:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                student: action.payload\n            }\n      \n        case SET_FLAG:\n            return {\n                ...state,\n                flag: true\n            }\n      \n        case \"GET_ALL_SUBJECTS\": \n            return {\n                ...state,\n                allSubjects: action.payload\n            }\n        \n        case \"GET_ATTENDENCE\": \n            return {\n                ...state,\n                attendence: action.payload\n            }\n        \n        case \"GET_MARKS\": \n            return {\n                ...state,\n                allMarks: action.payload\n            }\n        \n        default:\n            return state\n        \n    } \n}\n\nexport default studentReducer","import { SET_ERRORS_HELPER } from '../actionTypes';\n\nconst initialState = {};\n\nconst setErrorsHelper = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERRORS_HELPER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default setErrorsHelper\n\n\n","import { SET_ERRORS } from '../actionTypes';\n\nconst initialState = {};\n\nconst setErrors = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default setErrors\n\n\n","import { combineReducers } from 'redux';\nimport facultyReducer from './facultyReducer'\nimport adminReducer from './adminReducer'\nimport studentReducer from './studentReducer'\nimport errorReducerHelper from './errorReducerHelper'\nimport errorReducer from './errorReducer'\n\n\nexport default combineReducers({\n    faculty: facultyReducer,\n    admin: adminReducer,\n    student: studentReducer,\n    error: errorReducer,\n    errorHelper: errorReducerHelper\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n\n\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        // Apply to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_FACULTY, SET_ERRORS, SET_FLAG, SET_ERRORS_HELPER } from '../actionTypes'\n\nconst setFaculty = (data) => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    }\n}\n\nconst url = \"https://rkecportal.herokuapp.com\"\n\nconst fetchStudentsHelper = (data) => {\n    return {\n        type: \"FETCH_STUDENTS\",\n        payload: data\n    }\n}\n\nconst subjectCodeListHelper = (data) => {\n    return {\n        type: \"GET_SUBJECTCODE_LIST\",\n        payload: data\n    }\n}\n\n\nexport const facultyLogin = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/login\",\n                data: facultyCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('facultyJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setFaculty(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const facultyUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const getOTPFaculty = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + '/api/faculty/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({ type: SET_FLAG })\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPFaculty = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/postOTP\",\n                data: newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const fetchStudents = (department, year, section) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/fetchStudents\",\n                data: { department, year, section}\n            })\n            dispatch(fetchStudentsHelper(data.result))\n            dispatch(subjectCodeListHelper(data.subjectCode))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nconst facultyUpdateProfileFlag = (data) => {\n    return {\n        type: \"FACULTY_UPDATE_PROFILE_FLAG\",\n        payload: data\n    }\n}\n\nexport const facultyUpdate = (updatedData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/faculty/updateProfile`,\n                data: updatedData\n            })\n            dispatch(facultyUpdateProfileFlag(true))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const markAttendence = (selectedStudents, subjectCode, department, year,\n           section) => {\n    return async(dispatch) => {\n        try {\n                await axios({\n                method: 'Post',\n                    url: url + \"/api/faculty/markAttendence\",\n                data: { selectedStudents, subjectCode, department, year, section}\n                })\n            alert(\"attendence has been marked successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n        }\n        catch (err) {\n           console.log(\"Error in marking attendence, faculty action\", err.message)\n        }\n    }\n}\n\nexport const uploadMarks = (subjectCode, exam, totalMarks, marks,\n    department, year, section, ) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + \"/api/faculty/uploadMarks\",\n                data: {\n                    subjectCode, exam, totalMarks, marks, department, year, section,\n                    }\n            })\n            alert(\"Mark uploaded successfully\")\n            dispatch({\n                type: \"HELPER\",\n                payload: true\n            })\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setFacultyUser = data => {\n    return {\n        type: SET_FACULTY,\n        payload: data\n    };\n}\n\nexport const facultyLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('facultyJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setFaculty({}));\n    };","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport {\n    SET_ADMIN, SET_ERRORS, \n    GET_SUBJECTS\n} from '../actionTypes'\n\nconst url = \"https://rkecportal.herokuapp.com\"\n\nconst setAdmin = (data) => {\n    return {\n        type: SET_ADMIN,\n        payload: data\n    }\n}\n\nconst adminAddFacultyFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_FACULTY_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddStudentFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_STUDENT_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddSubjectFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_SUBJECT_FLAG\",\n        payload: data\n    }\n}\n\nconst adminAddAdminFlag = (data) => {\n    return {\n        type: \"ADMIN_ADD_ADMIN_FLAG\",\n        payload: data\n    }\n}\n\nconst getSubjctsHelper = (data) => {\n    return {\n        type: GET_SUBJECTS,\n        payload: data\n    }\n}\n\nconst adminGetAllFacultyHelper = (data) => {\n    return {\n        type: \"GET_ALL_FACULTY\",\n        payload: data\n    }   \n}\n\nconst adminGetAllStudentHelper = (data) => {\n    return {\n        type: \"GET_ALL_STUDENT\",\n        payload: data\n    }\n}\n\n\nconst adminGetAllSubjectHelper = (data) => {\n    return {\n        type: \"GET_ALL_SUBJECT\",\n        payload: data\n    }\n}\n\nexport const adminLogin = (adminCredential) => {\n    return async (dispatch) => {\n        try {\n            console.log(\"Admin Login Credentials\", adminCredential)\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/login\",\n                data: adminCredential\n            })\n            console.log(\"login response\", data)\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('adminJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setAdmin(decoded))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllSubjects = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/admin/getSubjects\",\n            })\n            dispatch(getSubjctsHelper(data))\n        }\n        catch (err) {\n            console.log(\"Error in getting all subjects\", err.message)\n        }\n    }\n}\n\nexport const adminAddFaculty = (facultyCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addFaculty\",\n                data: facultyCredential\n            })\n            dispatch(adminAddFacultyFlag(true))\n            alert(\"Faculty Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminAddStudent = (studentCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addStudent\",\n                data: studentCredential\n            })\n            dispatch(adminAddStudentFlag(true))\n            alert(\"Student Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminAddSubject = (subjectCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addSubject\",\n                data: subjectCredential\n            })\n            dispatch(adminAddSubjectFlag(true))\n            alert(\"Subject Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const adminAddAdmin = (adminCredentails) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/addAdmin\",\n                data: adminCredentails\n            })\n            dispatch(adminAddAdminFlag(true))\n            alert(\"Admin Added Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const adminGetAllFaculty = (department) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllFaculty\",\n                data: department\n            })\n            dispatch(adminGetAllFacultyHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllStudent = (searchCredentials) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllStudent\",\n                data: searchCredentials\n            })\n            dispatch(adminGetAllStudentHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const adminGetAllSubject = (department) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/admin/getAllSubject\",\n                data: department\n            })\n            dispatch(adminGetAllSubjectHelper(data.result))\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\nexport const setAdminUser = data => {\n    return {\n        type: SET_ADMIN,\n        payload: data\n    };\n}\n\nexport const adminLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('adminJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setAdmin({}));\n    };","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode';\nimport { SET_STUDENT, SET_ERRORS_HELPER, SET_ERRORS, STUDENT_UPDATE_PASSWORD, SET_OTP, SET_FLAG } from '../actionTypes'\n\nconst url = \"https://rkecportal.herokuapp.com\"\n\n\n\nconst setStudent = (data) => {\n    return {\n        type: SET_STUDENT,\n        payload: data\n    }\n}\n\n\n\n\n\n\n\n\nconst getAllSubjectsHelper = (data) => {\n    return {\n        type: \"GET_ALL_SUBJECTS\",\n        payload: data\n    }\n}\n\nconst fetchAttendenceHelper = (data) => {\n    return {\n        type: \"GET_ATTENDENCE\",\n        payload: data\n    }\n}\n\nconst getMarksHelper = (data) => {\n    return {\n        type: \"GET_MARKS\",\n        payload: data\n    }\n    \n}\n\nexport const studentLogin = (studentCredential) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/login\",\n                data: studentCredential\n            })\n            const { token } = data;\n            // Set token to local Storage\n            localStorage.setItem('studentJwtToken', token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setStudent(decoded))\n           \n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const studentUpdatePassword = (passwordData) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS_HELPER,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\n\n\n\nexport const getOTPStudent = (studentEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: url + '/api/student/forgotPassword',\n                data: studentEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({type:SET_FLAG})\n        }\n        catch (err) {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\nexport const submitOTPStudent = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + \"/api/student/postOTP\" ,\n                data:newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err){\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\n\n\n\n\n\n\nexport const studentUpdate = (updatedData) => {\n    return async () => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: url + `/api/student/updateProfile`,\n                data: updatedData\n            })\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const getAllSubjects = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/getAllSubjects\"\n            })\n            dispatch(getAllSubjectsHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    }\n}\n\nexport const fetchAttendence = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/checkAttendence\"\n            })\n            dispatch(fetchAttendenceHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in sending message\", err.message)\n        }\n    \n    }\n}\n\nexport const getMarks = () => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Get',\n                url: url + \"/api/student/getMarks\"\n            })\n           dispatch(getMarksHelper(data.result))\n        }\n        catch (err) {\n            console.log(\"Error in getting marks\", err.message)\n        }\n    }\n}\n\n\n\nexport const setStudentUser = data => {\n    return {\n        type: SET_STUDENT,\n        payload: data\n    };\n}\n\nexport const studentLogout = () =>\n    (dispatch) => {\n        // Remove token from localStorage\n        localStorage.removeItem('studentJwtToken');\n        // Remove auth header for future requests\n        setAuthToken(false);\n        // Set current user to {} which will set isAuthenticated to false\n        dispatch(setStudent({}));\n    };","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminLogin } from '../../redux/action/adminAction'\nimport classnames from 'classnames'\nimport '../../Style/bg.css'\n\n\nconst LoginPage = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch( )\n    const [registrationNumber, setRegistrationNumber] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n    useEffect(() => {\n        if (store.admin.isAuthenticated) {\n            history.push('/admin')\n        }\n    }, [store.admin.isAuthenticated])\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const fromHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminLogin({registrationNumber, password}))\n       \n    }\n\n    useEffect(() => {\n        if (store.error ||\n            store.admin.isAuthenticated) {\n            setIsLoading(false)\n        }\n        \n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.isAuthenticated])\n\n    \n    return (\n        <div className=\"\" id='trail'>\n            <div className=\"row d-flex justify-content-md-left align-items-center vh-100 container\">\n                <div className=\"col-md-4 \">\n                    <div className=\" \">\n                        <div>\n                            <h1 className=\"display-6 text-center fw-normal\">ADMIN</h1>\n                            <form noValidate onSubmit={fromHandler}>\n                                <div className=\"form-group\">\n                                    <input placeholder='Registration Number' onChange={(e) => setRegistrationNumber(e.target.value)} type=\"text\" value={registrationNumber} className={classnames(\"form-control form-control-lg\",\n                                        {'is-invalid' : error.registrationNumber\n                                        \n                                        })} id=\"emailId\" />\n                                    {error.registrationNumber && (<div className=\"invalid-feedback\">{error.registrationNumber}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input placeholder='Password' onChange={(e) => setPassword(e.target.value)} value={password} className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": error.password\n                                    })}  type=\"password\" id=\"passwordId\" />\n                                    {error.password && (<div className=\"invalid-feedback\">{error.password}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { adminLogout } from \"../../redux/action/adminAction\";\n\nconst Home = () => {\n  const store = useSelector((store) => store);\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    if (store.admin.admin.name) {\n      setName(store.admin.admin.name);\n    }\n  }, [store.admin.admin.name]);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const logoutHandler = () => {\n    dispatch(adminLogout());\n    history.push(\"/\");\n  };\n  return (\n    <>\n      <nav className=\"fixed navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          RK Engineering College\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\"></ul>\n          <li className=\"nav-item active list-unstyled\">\n            <Link className=\"nav-link text-white \" to=\"/admin\">\n              {name.toUpperCase()}\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <Link className=\"nav-link text-white \" to=\"/admin/addFaculty\">\n              Add Faculty\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <Link className=\"nav-link text-white \" to=\"/admin/addStudent\">\n              Add Student\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <Link className=\"nav-link text-white \" to=\"/admin/addSubject\">\n              Add Subject\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <Link className=\"nav-link text-white \" to=\"/admin/addAdmin\">\n              Add Admin\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <Link className=\"nav-link text-white \" to=\"/admin/allFaculties\">\n              {\" \"}\n              Faculties List\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <Link className=\"nav-link text-white \" to=\"/admin/allStudents\">\n              {\" \"}\n              Students List\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <Link className=\"nav-link text-white \" to=\"/admin/allSubject\">\n              Subjects List\n            </Link>\n          </li>\n          <div>\n            <button\n              style={{ listStyle: \"None\" }}\n              onClick={logoutHandler}\n              type=\"button\"\n              className=\"btn\"\n            >\n              <li className=\"text-white\">Logout</li>\n            </button>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddStudent } from '../../redux/action/adminAction'\nimport AdminHomeHelper from './AdminHomeHelper'\n\n\n\nconst AdminAddStudent = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [section, setSection] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [studentMobileNumber, setContactNumber] = useState('')\n    const [fatherName, setFatherName] = useState('')\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddStudent({\n            name,\n            email,\n            year,\n            department,\n            fatherName,\n            aadharCard,\n            gender,\n            section: section.toUpperCase(),\n            dob: dob.split(\"-\").reverse().join(\"-\"),\n            studentMobileNumber,\n            fatherMobileNumber\n        }))\n    } \n    useEffect(() => {\n        if (store.admin.adminAddStudentFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddStudentFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddStudentFlag) {\n            setIsLoading(false)\n        }\n    }, [store.error, store.admin.adminAddStudentFlag])\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Student Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"yearId\">Year</label>\n                                            <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.year\n                                                })} id=\"yearId\">\n                                                <option>Select</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                            </select>\n                                            {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                        </div>\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"sectionId\">Section</label>\n                                            <input onChange={(e) => setSection(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.section\n                                                })} id=\"sectionId\" />\n                                            {error.section && (<div className=\"invalid-feedback\">{error.section}</div>)}\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        \n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} class=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" class=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fatherId\">Father Name</label>\n                                            <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" class=\"form-control\" id=\"fatherId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                                            <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Student</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>:(history.push('/'))}\n            \n            </div>\n\n            \n      \n    )\n}\n\nexport default AdminAddStudent\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddFaculty } from '../../redux/action/adminAction'\nimport AdminHomeHelper from './AdminHomeHelper'\n\n\n\nconst AdminAddFaculty = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [designation, setDesignation] = useState('')\n    const [facultyMobileNUmber, setFacultyMobileNumber] = useState('')\n    const [dob, setDob] = useState('')\n    const [gender, setGender] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n           setError(store.error)\n       }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddFaculty({\n            name,\n            email,\n            designation,\n            facultyMobileNUmber,\n            department,\n            aadharCard,\n            gender,\n            dob: dob.split(\"-\").reverse().join(\"-\")}))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddFacultyFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddFacultyFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddFacultyFlag) {\n            setIsLoading(false)\n        }\n        else {\n            setIsLoading(true)\n        }\n    },[store.error,store.admin.adminAddFacultyFlag])\n    return (\n       \n        <div>\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper/>\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Faculty Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"designationId\">Designation</label>\n                                            <select onChange={(e) => setDesignation(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.designation\n                                                })} id=\"designationId\">\n                                                <option>Select</option>\n                                                <option value=\"Assistant Professor\">Assistant Professor</option>\n                                                <option value=\"Senior Professer\">Senior Professer</option>\n                                            </select>\n                                            {error.designation && (<div className=\"invalid-feedback\">{error.designation}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"genderId\">Gender</label>\n                                            <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                                <option>Select</option>\n                                                <option value=\"Male\">Male</option>\n                                                <option value=\"Female\">Female</option>\n                                                <option value=\"Other\">Other</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setFacultyMobileNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Add Faculty</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>):(history.push('/'))}\n            \n        </div>\n\n\n\n    )\n}\n\nexport default AdminAddFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddSubject } from '../../redux/action/adminAction'\nimport AdminHomeHelper from './AdminHomeHelper'\n\n\nconst AdminAddSubject = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [subjectName, setSubjectName] = useState('')\n    const [subjectCode, setSubjectCode] = useState('')\n    const [totalLectures, setTotalLectures] = useState('')\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddSubject({\n            subjectCode,\n            subjectName,\n            totalLectures,\n            department,\n            year\n        }))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddSubjectFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddSubjectFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddSubjectFlag) {\n            setIsLoading(false)\n        }\n    }, [store.error, store.admin.adminAddSubjectFlag])\n\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <> <AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-4\">\n                            <div className=\"d-flex justify-content-md-center vh-100\">\n                                <form noValidate onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"snameId\">Subject Name</label>\n                                        <input onChange={(e) => setSubjectName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.subjectName\n                                            })} id=\"snameId\" />\n                                        {error.subjectName && (<div className=\"invalid-feedback\">{error.subjectName}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"scodeId\">Subject Code</label>\n                                        <input onChange={(e) => setSubjectCode(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.subjectCode\n                                            })} id=\"scodeId\" />\n                                        {error.subjectCode && (<div className=\"invalid-feedback\">{error.subjectCode}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"totalLectures\">Total Lectures</label>\n                                        <input onChange={(e) => setTotalLectures(e.target.value)} type=\"number\" className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.totalLectures\n                                            })} id=\"totalLectures\" />\n                                        {error.totalLectures && (<div className=\"invalid-feedback\">{error.totalLectures}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"departmentId\">Department</label>\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.department\n                                            })} id=\"departmentId\">\n                                            <option>Select</option>\n                                            <option value=\"E.C.E\">E.C.E</option>\n                                            <option value=\"E.E.E\">E.E.E</option>\n                                            <option value=\"C.S.E\">C.S.E</option>\n                                            <option value=\"I.T\">I.T</option>\n                                            <option value=\"Mechanical\">Mechanical</option>\n                                            <option value=\"Civil\">Civil</option>\n                                        </select>\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"yearId\">Year</label>\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.year\n\n                                            })} id=\"yearId\">\n                                            <option>Select</option>\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                        </select>\n\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Subject</button>}\n                                   \n                                    \n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div></>: (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminAddSubject\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport { adminAddAdmin } from '../../redux/action/adminAction'\nimport AdminHomeHelper from './AdminHomeHelper'\n\n\n\nconst AdminAddAdmin = () => {\n    const store = useSelector((state) => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [department, setDepartment] = useState('')\n    const [dob, setDob] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n        else {\n            setError({})\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminAddAdmin({\n            name,\n            email,\n            department,\n            contactNumber,\n            dob: dob.split(\"-\").reverse().join(\"-\")\n        }))\n    }\n\n    useEffect(() => {\n        if (store.admin.adminAddAdminFlag) {\n            setError({})\n        }\n    }, [store.admin.adminAddAdminFlag])\n\n    useEffect(() => {\n        if (store.error || store.admin.adminAddAdminFlag) {\n            setIsLoading(false)\n        }\n        else {\n            setIsLoading(true)\n        }\n    }, [store.error, store.admin.adminAddAdminFlag])\n\n    return (\n\n        <div>\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"nameId\">Admin Name</label>\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.name\n                                                })} id=\"nameId\" />\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"emailId\">Email</label>\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.email\n                                                })} id=\"emailId\" />\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"departmentId\">Department</label>\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.department\n                                                })} id=\"departmentId\">\n                                                <option>Select</option>\n                                                <option value=\"E.C.E\">E.C.E</option>\n                                                <option value=\"C.S.E\">C.S.E</option>\n                                                <option value=\"E.E.E\">E.E.E</option>\n                                                <option value=\"I.T\">I.T</option>\n                                                <option value=\"Mechanical\">Mechanical</option>\n                                                <option value=\"Civil\">Civil</option>\n                                            </select>\n                                            {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"dobId\">DOB</label>\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.dob\n                                                })} id=\"dobId\" />\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"numberId\">Contact Number</label>\n                                            <input onChange={(e) => setContactNumber(e.target.value)} type=\"number\" className={classnames(\"form-control\",\n                                                {\n                                                    'is-invalid': error.contactNumber\n                                                })} id=\"numberId\" />\n                                            {error.contactNumber && (<div className=\"invalid-feedback\">{error.contactNumber}</div>)}\n                                        </div>\n                                    </div>\n                                </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Admin</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></>) : (history.push('/'))}\n\n        </div>\n\n\n\n    )\n}\n\nexport default AdminAddAdmin\n\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllFaculty } from '../../redux/action/adminAction'\nimport AdminHomeHelper from './AdminHomeHelper'\n\nimport classnames from 'classnames'\n\nconst AdminGetAllFaculty = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllFaculty({ department }))\n    }\n\n    useEffect(() => {\n        if (store.admin.allFaculty.length !== 0) {\n            setIsLoading(false)\n        }\n        \n    }, [store.admin.allFaculty.length])\n\n    \n    return (\n        <div>\n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-4\">\n                            <form form-inline noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"departmentId\">Department</label>\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.department\n                                        })} id=\"departmentId\">\n                                        <option>Select</option>\n                                        <option value=\"E.C.E\">E.C.E</option>\n                                        <option value=\"C.S.E\">C.S.E</option>\n                                        <option value=\"E.E.E\">E.E.E</option>\n                                        <option value=\"I.T\">I.T</option>\n                                        <option value=\"Mechanical\">Mechanical</option>\n                                        <option value=\"Civil\">Civil</option>\n                                    </select>\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                            </form>\n\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            \n                            {store.admin.allFaculty.length !== 0 && <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Joining Year</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.admin.allFaculty.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.registrationNumber}</td>\n                                                <td>{res.name}</td>\n                                                <td>{res.email}</td>\n                                                <td>{res.joiningYear}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>}\n                           \n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminGetAllFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllStudent } from '../../redux/action/adminAction'\nimport AdminHomeHelper from './AdminHomeHelper'\n\nimport classnames from 'classnames'\n\nconst AdminGetAllFaculty = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    \n    \n\n    const [error, setError] = useState({})\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllStudent({ department, year }))\n    }\n\n    useEffect(() => {\n        if (store.admin.allStudent.length !== 0) {\n            setIsLoading(false)\n        }\n\n    }, [store.admin.allStudent.length])\n    return (\n        <div>\n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-4\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"departmentId\">Department</label>\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.department\n                                        })} id=\"departmentId\">\n                                        <option>Select</option>\n                                        <option value=\"E.C.E\">E.C.E</option>\n                                        <option value=\"C.S.E\">C.S.E</option>\n                                        <option value=\"I.T\">I.T</option>\n                                        <option value=\"E.E.E\">E.E.E</option>\n                                        <option value=\"Mechanical\">Mechanical</option>\n                                        <option value=\"Civil\">Civil</option>\n                                    </select>\n                                    {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"yearId\">Year</label>\n                                    <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.year\n                                        })} id=\"yearId\">\n                                        <option>Select</option>\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                    </select>\n                                    {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                              \n                               \n                            </form>\n\n\n                        </div>\n                        <div className=\"col-md-8\">\n\n                            {store.admin.allStudent.length !== 0 && <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Email</th>\n                                        <th scope=\"col\">Section</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.admin.allStudent.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.registrationNumber}</td>\n                                                <td>{res.name}</td>\n                                                <td>{res.email}</td>\n                                                <td>{res.section}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>}\n\n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n        </div>\n    )\n}\n\nexport default AdminGetAllFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { adminGetAllSubject } from '../../redux/action/adminAction'\nimport AdminHomeHelper from './AdminHomeHelper'\n\nimport classnames from 'classnames'\n\nconst AdminGetAllSubjects = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState('')\n    const [year, setYear] = useState('')\n    const [error, setError] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory()\n\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(adminGetAllSubject({ department, year }))\n\n    }\n    useEffect(() => {\n        if (store.admin.allSubject.length !== 0) {\n            setIsLoading(false)\n        }\n\n    }, [store.admin.allSubject.length])\n    return (\n        <div>\n            <div>\n                {store.admin.isAuthenticated ? <>\n                    <AdminHomeHelper />\n                    <div className=\"container\">\n                        <div className=\"row mt-5\">\n                            <div className=\"col-md-4\">\n                                <form noValidate onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"departmentId\">Department</label>\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.department\n                                            })} id=\"departmentId\">\n                                            <option>Select</option>\n                                            <option value=\"E.C.E\">E.C.E</option>\n                                            <option value=\"C.S.E\">C.S.E</option>\n                                            <option value=\"E.E.E\">E.E.E</option>\n                                            <option value=\"I.T\">I.T</option>\n                                            <option value=\"Mechanical\">Mechanical</option>\n                                            <option value=\"Civil\">Civil</option>\n                                        </select>\n                                        {error.department && (<div className=\"invalid-feedback\">{error.department}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"yearId\">Year</label>\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                            {\n                                                'is-invalid': error.year\n                                            })} id=\"yearId\">\n                                            <option>Select</option>\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                        </select>\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\n                                    </div>\n                                    <div class=\"row justify-content-center\">\n                                        <div class=\"col-md-1\">\n                                            {\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                    <span class=\"sr-only\">Loading...</span>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\n                                   \n                                </form>\n\n\n                            </div>\n                            <div className=\"col-md-8\">\n\n                                {store.admin.allSubject.length !== 0 && <table className=\"table border\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">S.No</th>\n                                            <th scope=\"col\">Subject Code</th>\n                                            <th scope=\"col\">Subject Name</th>\n                                            <th scope=\"col\">Total Lectures</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            store.admin.allSubject.map((res, index) =>\n                                                <tr key={index}>\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td>{res.subjectCode}</td>\n                                                    <td>{res.subjectName}</td>\n                                                    <td>{res.totalLectures}</td>\n                                                </tr>\n                                            )\n                                        }\n                                    </tbody>\n                                </table>}\n\n                            </div>\n                        </div>\n                    </div>\n                </> : (history.push('/'))}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default AdminGetAllSubjects\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom'\nimport AdminHomeHelper from './AdminHomeHelper'\n\n\nconst AdminHome = () => {\n    const store = useSelector((store) => store)\n\n    const history = useHistory()\n    return (\n        <div>\n           \n            {store.admin.isAuthenticated ? <>\n                <AdminHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-2\">\n                        </div>\n                        <div className=\"col-8\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.admin.admin.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.admin.admin.name}</h5>\n                                            <h5 className=\"card-title\">{store.admin.admin.registrationNumber}</h5>\n                                            {/* <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link> */}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.admin.admin.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.admin.admin.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.admin.admin.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Joining Year</td>\n                                                <td>{store.admin.admin.joiningYear}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.admin.admin.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.admin.admin.contactNumber ?\n                                                    store.admin.admin.contactNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-2\">\n                        </div>\n                    </div>\n                </div>\n                </> : (history.push('/'))}\n                \n        </div>\n    )\n}\n\nexport default AdminHome\n","import React from 'react'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nconst Caraousel = () => {\r\n  return (\r\n    <>\r\n    <div className=\"flex mx-auto bg-white \">\r\n  \r\n  <div\r\n    className=\" w-full lg:block\"\r\n    style={{clipPath:\"polygon( 0 0, 100% 0, 100% 59%, 24% 100%, 0 80%)\" ,height:\"650px\"}}\r\n  >\r\n<div className=\"object-cover h-full \">\r\n  <Carousel\r\n    autoPlay={true}\r\n    infiniteLoop={true}\r\n    showStatus={false}\r\n    showThumbs={false}\r\n    showIndicators={false}\r\n    showArrows={false}\r\n  >\r\n    <div>\r\n      <img src=\"https://images.unsplash.com/photo-1525921429624-479b6a26d84d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8Y29sbGVnZXxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60\" alt=\" myNotes \"   />\r\n    </div>\r\n    <div>\r\n      <img src=\"https://images.unsplash.com/photo-1562774053-701939374585?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1186&q=80\" alt=\" ground\"   />\r\n    </div>\r\n    <div>\r\n      <img src=\"https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\" alt=\" students\"  />\r\n    </div>\r\n    <div>\r\n      <img src=\"https://images.unsplash.com/photo-1589801258579-18e091f4ca26?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1201&q=80\" alt=\" students\"  />\r\n    </div>\r\n  </Carousel>\r\n  </div>\r\n    </div>\r\n  </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Caraousel","import React from 'react'\r\nimport {  Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    AiFillFacebook,\r\n    AiFillInstagram,\r\n    AiFillTwitterSquare,\r\n    AiFillLinkedin,\r\n    AiFillYoutube,\r\n    AiFillGoogleCircle\r\n  } from \"react-icons/ai\";\r\nconst Footer = () => {\r\n  return (\r\n<div className=\" \">\r\n<footer className=\"text-center text-white\" style={{backgroundColor: \"#3f51b5\"}}>\r\n  <div className=\"container\">\r\n    <section className=\"mt-5\">\r\n      <div className=\"row text-center d-flex justify-content-center pt-5\">\r\n        <div className=\"col-md-2\">\r\n          <h6 className=\"text-uppercase font-weight-bold\">\r\n            <Link to=\"/\" className=\"text-white text-decoration-none\">About us</Link>\r\n          </h6>\r\n        </div>\r\n\r\n        <div className=\"col-md-2\">\r\n          <h6 className=\"text-uppercase font-weight-bold\">\r\n            <Link to=\"/\" className=\"text-white text-decoration-none\">Events</Link>\r\n          </h6>\r\n        </div>\r\n\r\n        <div className=\"col-md-2\">\r\n          <h6 className=\"text-uppercase font-weight-bold\">\r\n            <Link to=\"/\" className=\"text-white text-decoration-none\">Awards</Link>\r\n          </h6>\r\n        </div>\r\n\r\n        <div className=\"col-md-2\">\r\n          <h6 className=\"text-uppercase font-weight-bold\">\r\n            <Link to=\"/\" className=\"text-white text-decoration-none\">Help</Link>\r\n          </h6>\r\n        </div>\r\n\r\n        <div className=\"col-md-2\">\r\n          <h6 className=\"text-uppercase font-weight-bold\">\r\n            <Link to=\"/\" className=\"text-white text-decoration-none\">Contact</Link>\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <hr className=\"my-5\" />\r\n\r\n    <section className=\"mb-5\">\r\n      <div className=\"row d-flex justify-content-center\">\r\n        <div className=\"col-lg-8\">\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sunt\r\n            distinctio earum repellat quaerat voluptatibus placeat nam,\r\n            commodi optio pariatur est quia magnam eum harum corrupti\r\n            dicta, aliquam sequi voluptate quas.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"text-center mb-5\">\r\n      <Link to=\"/\" className=\"text-white mx-4 \">\r\n        <AiFillFacebook/>\r\n      </Link>\r\n      <Link to=\"/\" className=\"text-white mx-4 \">\r\n      <AiFillInstagram/>\r\n      </Link>\r\n      <Link to=\"/\" className=\"text-white mx-4 \">\r\n      <AiFillTwitterSquare/>\r\n      </Link>\r\n      <Link to=\"/\" className=\"text-white mx-4 \">\r\n      <AiFillLinkedin/>\r\n      </Link>\r\n      <Link to=\"/\" className=\"text-white mx-4 \">\r\n      <AiFillGoogleCircle/>\r\n      </Link>\r\n      <Link to=\"/\" className=\"text-white mx-4 \">\r\n      <AiFillYoutube/>\r\n      </Link>\r\n     \r\n    </section>\r\n  </div>\r\n\r\n  <div\r\n       className=\"text-center p-3\"\r\n       style={{backgroundColor: \"rgba(0, 0, 0, 0.2)\"}}\r\n       >\r\n    © 2020 Copyright \r\n    <Link className=\"text-white text-decoration-none\" to=\"https://mdbootstrap.com/\"\r\n       > RK Engineering College</Link\r\n      >\r\n  </div>\r\n</footer>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst EventNews = () => {\r\n  return (\r\n    <div className=\"container my-5\">\r\n    <div className=\"row\">\r\n    <div className=\"col \">\r\n    <div className='border border-5 rounded-3 border-dark'>\r\n    <div className='text-center fw-bold fs-2'>Events</div>\r\n     <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n        <button className=\"accordion-button collapsed fw-bold \" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n          Accordion Item #1\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n          Accordion Item #2\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n          Accordion Item #3\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n      </div>\r\n      <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingThree1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseFour\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n          Accordion Item #4\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseFour\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingThree1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseFive\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n          Accordion Item #5\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseFive\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingThree1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseSix\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n          Accordion Item #6\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseSix\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n     </div>\r\n     </div>\r\n    </div>\r\n    <div className=\"col\">\r\n    <div className='border border-5 rounded-3 border-dark'>\r\n    <div className='text-center fw-bold fs-2'>News</div>\r\n     <div className=\"accordion accordion-flush\" id=\"accordionFlushExample1\">\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingOne1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne1\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n          Accordion Item #1\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseOne1\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne1\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingTwo1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo1\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n          Accordion Item #2\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseTwo1\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo1\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingThree1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree1\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n          Accordion Item #3\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseThree1\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingThree1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseFour1\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n          Accordion Item #4\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseFour1\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingThree1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseFive1\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n          Accordion Item #5\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseFive1\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"flush-headingThree1\">\r\n        <button className=\"accordion-button collapsed fw-bold\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseSix1\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n          Accordion Item #6\r\n        </button>\r\n      </h2>\r\n      <div id=\"flush-collapseSix1\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample1\">\r\n        <div className=\"accordion-body fst-italic\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n      </div>\r\n    </div>\r\n     </div>\r\n     </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default EventNews","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { facultyLogin } from \"../../redux/action/facultyAction\";\nimport { studentLogin } from \"../../redux/action/studentAction\";\nimport classnames from \"classnames\";\nimport Caraousel from \"../Caraousel\";\nimport Footer from \"../Footer\";\nimport EventNews from \"../EventNews\";\n\nconst FacultyStudentLoginPags = () => {\n  const store = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [facultyRegNum, setFacultyRegNum] = useState(\"\");\n  const [facultyPassword, setFacultyPassword] = useState(\"\");\n  const [studentRegNum, setStudentRegNum] = useState(\"\");\n  const [studentPassword, setStudentPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [errorsHelper, setErrorsHelper] = useState({});\n  const [isFacultyLoading, setIsFacultyLoading] = useState(false);\n  const [isStudentLoading, setIsStudentLoading] = useState(false);\n  const refClose = useRef(null);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (store.faculty.isAuthenticated) {\n      history.push(\"/faculty\");\n    }\n  }, [store.faculty.isAuthenticated]);\n\n  useEffect(() => {\n    if (store.error) {\n      setErrors(store.error);\n    }\n  }, [store.error]);\n  useEffect(() => {\n    if (store.student.isAuthenticated) {\n      history.push(\"/home\");\n    }\n  }, [store.student.isAuthenticated]);\n\n  useEffect(() => {\n    if (store.errorHelper) {\n      setErrorsHelper(store.errorHelper);\n    }\n  }, [store.errorHelper]);\n\n  const facultyFormHandler = (e) => {\n    e.preventDefault();\n    let registrationNumber;\n    let password;\n    setIsFacultyLoading(true);\n    dispatch(\n      facultyLogin({\n        registrationNumber: facultyRegNum,\n        password: facultyPassword,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (store.error || store.faculty.isAuthenticated) {\n      setIsFacultyLoading(false);\n    } else {\n      setIsFacultyLoading(true);\n    }\n  }, [store.error, store.faculty.isAuthenticated]);\n\n  const studentFormHandler = (e) => {\n    e.preventDefault();\n    let registrationNumber;\n    let password;\n    setIsStudentLoading(true);\n    dispatch(\n      studentLogin({\n        registrationNumber: studentRegNum,\n        password: studentPassword,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (store.errorHelper || store.student.isAuthenticated) {\n      setIsStudentLoading(false);\n    } else {\n      setIsStudentLoading(false);\n    }\n  }, [store.errorHelper, store.student.isAuthenticated]);\n\n  return (\n    <>\n      <nav className=\"fixed navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          RK Engineering College\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\"></ul>\n          <li className=\"nav-item active list-unstyled\">\n            <Link className=\"nav-link text-white\" to=\"#\">\n              Home <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <Link className=\"nav-link  text-white\" to=\"/adminLogin\">\n              Admin\n            </Link>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <div\n              type=\"button\"\n              className=\"text-white  nav-link\"\n              data-toggle=\"modal\"\n              data-target=\"#exampleModal\"\n            >\n              Faculty\n            </div>\n          </li>\n          <li className=\"nav-item list-unstyled\">\n            <div\n              type=\"button\"\n              className=\" text-white nav-link\"\n              data-toggle=\"modal\"\n              data-target=\"#exampleModal1\"\n            >\n              Student\n            </div>\n          </li>\n        </div>\n      </nav>\n      {/* Faculty Modal */}\n      <div\n        className=\"modal fade\"\n        id=\"exampleModal\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                Faculty Login\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div\n                className=\" m-auto border\"\n                style={{\n                  backgroundColor: \"white\",\n                  padding: \"1rem 1rem 0rem 1rem\",\n                }}\n              >\n                <div>\n                  <form noValidate>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"facRegId\">Registration Number</label>\n                      <input\n                        onChange={(e) => setFacultyRegNum(e.target.value)}\n                        type=\"text\"\n                        value={facultyRegNum}\n                        className={classnames(\"form-control\", {\n                          \"is-invalid\": errors.registrationNumber,\n                        })}\n                        id=\"facRegId\"\n                      />\n                      {errors.registrationNumber && (\n                        <div className=\"invalid-feedback\">\n                          {errors.registrationNumber}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"passwordFacId\">Password</label>\n                      <input\n                        onChange={(e) => setFacultyPassword(e.target.value)}\n                        value={facultyPassword}\n                        className={classnames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        type=\"password\"\n                        id=\"passwordFacId\"\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row justify-content-center\">\n                      <div className=\"col-md-1\">\n                        {isFacultyLoading && (\n                          <div\n                            className=\"spinner-border text-primary\"\n                            role=\"status\"\n                          >\n                            <span className=\"sr-only\">Loading...</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    {!isFacultyLoading && (\n                      <button\n                        className=\"btn btn-info btn-block\"\n                        onClick={facultyFormHandler}\n                      >\n                        Login\n                      </button>\n                    )}\n                  </form>\n                  <p className=\"text-center mt-2 \">\n                    <Link className=\"text-center\" to=\"/forgotPassword/faculty\">\n                      Forgot Password\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Student Modal */}\n      <div\n        className=\"modal fade\"\n        id=\"exampleModal1\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalLabel1\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel1\">\n                Student Login\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div\n                className=\" m-auto border\"\n                style={{\n                  backgroundColor: \"white\",\n                  padding: \"1rem 1rem 0rem 1rem\",\n                }}\n              >\n                <div>\n                  <form noValidate>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"studentId\">Registration Number</label>\n                      <input\n                        onChange={(e) => setStudentRegNum(e.target.value)}\n                        type=\"text\"\n                        value={studentRegNum}\n                        className={classnames(\"form-control\", {\n                          \"is-invalid\": errorsHelper.registrationNumber,\n                        })}\n                        id=\"studentId\"\n                      />\n                      {errorsHelper.registrationNumber && (\n                        <div className=\"invalid-feedback\">\n                          {errorsHelper.registrationNumber}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"passwordId\">Password</label>\n                      <input\n                        onChange={(e) => setStudentPassword(e.target.value)}\n                        value={studentPassword}\n                        className={classnames(\"form-control\", {\n                          \"is-invalid\": errorsHelper.password,\n                        })}\n                        type=\"password\"\n                        id=\"passwordId\"\n                      />\n                      {errorsHelper.password && (\n                        <div className=\"invalid-feedback\">\n                          {errorsHelper.password}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"row justify-content-center\">\n                      <div className=\"col-md-1\">\n                        {isStudentLoading && (\n                          <div\n                            className=\"spinner-border text-primary\"\n                            role=\"status\"\n                          >\n                            <span className=\"sr-only\">Loading...</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    {!isStudentLoading && (\n                      <button\n                        onClick={studentFormHandler}\n                        className=\"btn btn-info btn-block \"\n                        data-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                      >\n                        Login\n                      </button>\n                    )}\n                  </form>\n                  <p className=\"text-center\">\n                    <Link className=\"text-center\" to=\"/forgotPassword/student\">\n                      Forgot Password\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Caraousel />\n      <EventNews />\n      <Footer />\n    </>\n  );\n};\n\nexport default FacultyStudentLoginPags;\n","import React, {useState,useEffect} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector} from 'react-redux'\nimport {facultyLogout} from '../../redux/action/facultyAction'\n\n\n\nconst Home = () => {\n    const store = useSelector((store)=>store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n\n        if (store.faculty.faculty.faculty.name) {\n            setName(store.faculty.faculty.faculty.name)\n        }\n    }, [store.faculty.faculty.faculty.name])\n    const logoutHandler = () => {\n        dispatch(facultyLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">RKEC</h4>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/attendenceFaculty\"><li>MARK ATTENDANCE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/uploadMarks\"><li>UPLOAD MARKS</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\n                                </li>\n                            </ul>\n                        </div>\n                        <div>\n                            <button style={{listStyle:\"None\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport FacultyHomeHelper from '../Faculty/FacultyHomeHelper'\nimport { facultyUpdatePassword } from '../../redux/action/facultyAction'\n\n\n\n\nconst FacultyUpdatePassword = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState({})\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(facultyUpdatePassword({ registrationNumber: store.faculty.faculty.faculty.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\n    }\n    useEffect(() => {\n        \n    }, [store.faculty])\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container m-5\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Old Password</label>\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.oldPassword\n\n                                        })} id=\"emailId\" />\n                                    {error.oldPassword && (<div classNameName=\"invalid-feedback\">{error.oldPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.newPassword\n                                    })}  type=\"password\" id=\"passwordId\" />\n                                    {error.newPassword && (<div classNameName=\"invalid-feedback\">{error.newPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.confirmNewPassword\n                                    })}  type=\"password\" id=\"passwordCId\" />\n                                    {error.confirmNewPassword && (<div classNameName=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-info btn-block \">Update Password</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n</> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default FacultyUpdatePassword\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom'\n\n\nimport FacultyHomeHelper from './FacultyHomeHelper'\n\n\nconst FacultyInterface = () => {\n    const history = useHistory()\n    const store = useSelector((store) => store)\n    return (\n        <>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-2\">\n\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"row\">\n                                <div className=\"col-5\">\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                                        <img className=\"card-img-top\" src={store.faculty.faculty.faculty.avatar} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.name}</h5>\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.registrationNumber}</h5>\n                                            <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <table className=\"table border\">\n                                        <tbody>\n                                            <tr>\n                                                <td>Name</td>\n                                                <td>{store.faculty.faculty.faculty.name}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Email</td>\n                                                <td>{store.faculty.faculty.faculty.email}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Registration Number</td>\n                                                <td>{store.faculty.faculty.faculty.registrationNumber}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Date Of Birth</td>\n                                                <td>{store.faculty.faculty.faculty.dob}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Designation</td>\n                                                <td>{store.faculty.faculty.faculty.designation}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Joining Year</td>\n                                                <td>{store.faculty.faculty.faculty.joiningYear}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Department</td>\n                                                <td>{store.faculty.faculty.faculty.department}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Gender</td>\n                                                <td>{store.faculty.faculty.faculty.gender ? store.faculty.faculty.faculty.gender :\n\n                                                    \"NA\"\n                                                }</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Contact Number</td>\n                                                <td>{store.faculty.faculty.faculty.facultyMobileNumber ?\n                                                    store.faculty.faculty.faculty.facultyMobileNumber : \"NA\"}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2\">\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </> : (history.push('/'))}\n           \n        </>\n\n\n    )\n}\n\nexport default FacultyInterface\n","import React, { useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport {fetchStudents,markAttendence } from '../../redux/action/facultyAction'\nimport FacultyHomeHelper from './FacultyHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\n\nconst AttendenceFaculty = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [section, setSection] = useState(\"\")\n    const [subjectCode, setSubjectCode] = useState(\"\")\n    const [checkedValue, setCheckedValue] = useState([])\n    const [error, setError] = useState({})\n    const [flag, setFlag] = useState(true)\n    const [isLoading, setIsLoading] = useState(false)\n    const [isLoading2, setIsLoading2] = useState(false)\n\n    const handleInputChange = (e) => {\n        const tempCheck = checkedValue\n        let index\n        if (e.target.checked)\n        {\n            tempCheck.push(e.target.value)\n        }\n        else {\n            index = tempCheck.indexOf(e.target.value)\n            tempCheck.splice(index,1)\n        }\n        setCheckedValue(tempCheck)\n    }\n    \n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        dispatch(fetchStudents(department, year, section))\n       \n    }\n\n    useEffect(() => {\n        if (store.error || !store.faculty.fetchedStudentsHelper) {\n            setIsLoading(false)\n        }\n        \n    }, [store.error, store.faculty.fetchedStudentsHelper])\n\n \n\n    const secondFormHandler = (e) => {\n        e.preventDefault()\n        setIsLoading2(true)\n        dispatch(markAttendence(checkedValue, subjectCode, department, year, section))\n        setCheckedValue([])\n        \n    }\n\n    useEffect(() => {\n        if (store.faculty.fetchedStudentsHelper) {\n            setIsLoading2(false)\n        }\n        \n    },[store.faculty.fetchedStudentsHelper])\n    \n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\n                    <div className=\"col-md-4\">\n                        <form noValidate onSubmit={formHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"branchId\">Department</label>\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.department\n\n                                    })} id=\"branchId\">\n                                    <option>Select</option>\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\n                                </select>\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"yearId\">Year</label>\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.year\n\n                                    })} id=\"yearId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div>\n                           \n                            <div className=\"form-group\">\n                                <label htmlFor=\"sectionId\">Section</label>\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.section\n\n                                    })} id=\"sectionId\">\n                                    <option>Select</option>\n                                    <option value=\"A\">A</option>\n                                    <option value=\"B\">B</option>\n                                    <option value=\"C\">C</option>\n                                    <option value=\"D\">D</option>\n                                    <option value=\"E\">E</option>\n                                    <option value=\"F\">F</option>\n                                </select>\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\n                            </div>\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-md-1\">\n                                    {\n                                        isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                            <span class=\"sr-only\">Loading...</span>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Search</button>}\n                        </form>\n                    </div>\n                </div>}\n\n\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\n                    <div className=\"col-md-4\">\n                        <form onSubmit={secondFormHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subjectId\">Subject Code</label>\n                                <select required onChange={(e) => setSubjectCode(e.target.value)} className=\"form-control\" id=\"subjectId\">\n                                    <option>Select</option>\n                                    {\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\n                                            <option>{subjectCodeName}</option>\n                                        )\n                                    }\n                                </select>\n                            </div>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <td><div className=\"form-check\">\n                                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n                                        </div></td>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Student Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.faculty.fetchedStudents.map((obj, index) =>\n                                            <tr>\n                                                <td><div className=\"form-check\">\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value={obj._id} onChange={handleInputChange} id=\"defaultCheck1\" />\n                                                </div></td>\n                                                <td key={index}>{obj.registrationNumber}</td>\n                                                <td>{obj.name}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-md-1\">\n                                    {\n                                        isLoading2 && <div class=\"spinner-border text-primary\" role=\"status\">\n                                            <span class=\"sr-only\">Loading...</span>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            {!isLoading2 && <button type=\"submit\" className=\"btn btn-info ml-1  \">Submit</button>}\n                        </form>\n                    </div>\n                </div>\n                }</> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default AttendenceFaculty\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport classnames from 'classnames'\nimport { fetchStudents, uploadMarks } from '../../redux/action/facultyAction'\nimport FacultyHomeHelper from './FacultyHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\n\n\nconst FacultyUploadMarks = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch() \n    const [department, setDepartment] = useState(\"\")\n    const [year, setYear] = useState(\"\")\n    const [marks, setMarks] = useState([])\n    const [section, setSection] = useState(\"\")\n    const [subjectCode, setSubjectCode] = useState(\"\")\n    const [totalMarks, setTotalMarks] = useState()\n    const [exam ,setExam] = useState(\"\")\n    const [error, setError] = useState({})\n    const [errorHelper, setErrorHelper] = useState({})\n\n   \n\n\n    const handleInputChange = (value, _id) => {\n    \n        const newMarks = [...marks]\n        let index = newMarks.findIndex(m => m._id === _id)\n        if (index === -1) {\n            newMarks.push({ _id, value })\n        }\n        else {\n           newMarks[index].value = value\n        }\n        setMarks(newMarks)\n    }\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setErrorHelper(store.errorHelper)\n        }\n    }, [store.errorHelper])\n\n    const formHandler = (e) => {\n        e.preventDefault()\n    \n       dispatch(fetchStudents(department, year,  section))\n\n    }\n\n\n\n    const secondFormHandler = (e) => {\n        e.preventDefault()\n        dispatch(uploadMarks(subjectCode, exam, totalMarks, marks, department, section\n        ))\n    }\n\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\n                    <div className=\"col-md-4\">\n                        <form noValidate onSubmit={formHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"branchId\">Department</label>\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.department\n\n                                    })} id=\"bramchId\">\n                                    <option>Select</option>\n                                    <option value={store.faculty.faculty.faculty.department}>{store.faculty.faculty.faculty.department}</option>\n                                </select>\n                                {error.department && (<div classNameName=\"invalid-feedback\">{error.department}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"yearId\">Year</label>\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.year\n\n                                    })} id=\"yearId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label htmlFor=\"semesterId\">Semester</label>\n                                <select onChange={(e) => setSemester(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.semester\n\n                                    })} id=\"semesterId\">\n                                    <option>Select</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                    <option value=\"6\">6</option>\n                                    <option value=\"7\">7</option>\n                                    <option value=\"8\">8</option>\n                                </select>\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label htmlFor=\"sectionId\">Section</label>\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': error.section\n\n                                    })} id=\"sectionId\">\n                                    <option>Select</option>\n                                    <option value=\"A\">A</option>\n                                    <option value=\"B\">B</option>\n                                    <option value=\"C\">C</option>\n                                    <option value=\"D\">D</option>\n                                    <option value=\"E\">E</option>\n                                    <option value=\"F\">F</option>\n                                </select>\n                                {error.section && (<div classNameName=\"invalid-feedback\">{error.section}</div>)}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n                        </form>\n                    </div>\n                </div>}\n\n\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\n                    <div className=\"col-md-4\">\n                        <form onSubmit={secondFormHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subjectId\">Subject Code</label>\n                                <select onChange={(e) => setSubjectCode(e.target.value)} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.subjectCode\n\n                                    })} id=\"subjectId\">\n                                    <option>Select</option>\n                                    {\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\n                                            <option>{subjectCodeName}</option>\n                                        )\n                                    }\n                                </select>\n                                {errorHelper.subjectCode && (<div classNameName=\"invalid-feedback\">{errorHelper.subjectCode}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"examId\">Exam</label>\n                                <select onChange={(e) => setExam(e.target.value)} value={exam} className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.exam\n\n                                    })} id=\"examId\">\n                                    <option>Select</option>\n                                    <option value=\"CycleTest1\">Cycle Test 1</option>\n                                    <option value=\"CycleTest2\">Cylce Test 2</option>\n                                    <option value=\"Semester\">Semester</option>\n                                </select>\n                                {errorHelper.exam && (<div classNameName=\"invalid-feedback\">{errorHelper.exam}</div>)}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"marksId\">Total Marks</label>\n                                <input type=\"number\" className={classnames(\"form-control\",\n                                    {\n                                        'is-invalid': errorHelper.totalMarks\n\n                                    })} id=\"marksId\"\n                                    value={totalMarks} onChange={(e) => setTotalMarks(e.target.value)} />\n                                {errorHelper.totalMarks && (<div classNameName=\"invalid-feedback\">{errorHelper.totalMarks}</div>)}\n                            </div>\n\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Registration Number</th>\n                                        <th scope=\"col\">Student Name</th>\n                                        <th scope=\"col\">Marks</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.faculty.fetchedStudents.map((obj, index) =>\n                                            <tr key={index}>\n                                                <td>{obj.registrationNumber}</td>\n                                                <td>{obj.name}</td>\n                                                <td><div className=\"form-check\">\n                                                    <input className=\"form-control\" required type=\"number\" value={obj.marks} onChange={(e) => handleInputChange(e.target.value, obj._id)} id=\"defaultCheck1\" />\n                                                </div></td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                            <button type=\"submit\" className=\"btn btn-primary ml-1\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n                }\n            </> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default FacultyUploadMarks\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, withRouter } from 'react-router-dom'\n\n\nimport { facultyUpdate, facultyLogout} from '../../redux/action/facultyAction'\nimport FacultyHomeHelper from './FacultyHomeHelper'\n\n\nconst FacultyUpdateProfile = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [gender, setGender] = useState('')\n    const [facultyMobileNumber, setContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const imagehandler = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0]\n            setAvatar(img)\n        }\n    }\n\n\n    const formHandler = async (e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"gender\", gender)\n        formData.append(\"facultyMobileNumber\", facultyMobileNumber)\n        formData.append(\"aadharCard\", aadharCard)\n        formData.append(\"avatar\", avatar)\n        formData.append(\"email\", store.faculty.faculty.faculty.email)\n        setIsLoading(true)\n        dispatch(facultyUpdate(formData, history))\n        alert(\"Kindly login again to see updates\")\n        dispatch(facultyLogout())\n        history.push('/')\n    }\n\n    useEffect(() => {\n        if (store.faculty.updateProfileFlag) {\n            setIsLoading(false)\n        }\n    }, [store.faculty.updateProfileFlag])\n    return (\n        <div>\n            {store.faculty.isAuthenticated ? <>\n                <FacultyHomeHelper />\n                <div className=\"container mt-5\">\n                    <div className=\"row \">\n                        <div className=\"col-md-5 w-100 m-auto\">\n                            <form onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"inputId\">Profile Picture</label>\n                                    <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"genderId\">Gender</label>\n                                    <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                        <option>Select</option>\n                                        <option value=\"Male\">Male</option>\n                                        <option value=\"Female\">Female</option>\n                                        <option value=\"Other\">Other</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"numberId\">Contact Number</label>\n                                    <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                    <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                </div>\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-md-1\">\n                                        {\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                                <span class=\"sr-only\">Loading...</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Update</button>}\n                            </form>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n            \n        </div>\n    )\n}\n\nexport default withRouter(FacultyUpdateProfile)\n","import React, {useState, useEffect} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { studentLogout} from '../../redux/action/studentAction'\n\n\nconst Home = () => {\n    const history = useHistory()\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const [name, setName] = useState(\"\")\n    useEffect(() => {\n        if (store.student.student.student.name) {\n            setName(store.student.student.student.name)\n        }\n    }, [store.student.student.student.name])\n   \n    const logoutHandler = () => {\n        dispatch(studentLogout())\n        history.push('/')\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light  bg-light\">\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">RKEC</h4>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item active\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\n                                </li>\n\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"> <Link  to=\"/student/testPerformance\"><li>TEST PERFORMANCE</li></Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"> <Link  to=\"/student/attendence\">ATTENDENCE</Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link  to=\"/student/getAllSubjects\">SUBJECT LIST</Link></button>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/student/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\n                                </li>\n                               \n                            </ul>\n                           \n                        </div>\n                        <div>\n                            <button style={{listStyle:\"none\"}} onClick={logoutHandler} type=\"button\" className=\"btn\"><li>LOGOUT</li></button>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport StudentHomeHelper from \"./StudentHomeHelper\";\n\nconst Home = () => {\n  const store = useSelector((store) => store);\n  const history = useHistory();\n\n  return (\n    <div>\n      {store.student.isAuthenticated ? (\n        <>\n          <StudentHomeHelper />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-2\"></div>\n              <div className=\"col-md-8 mt-5\">\n                <div className=\"row\">\n                  <div className=\"col-md-5\">\n                    <div className=\"card\" style={{ width: \"18rem\" }}>\n                      <img\n                        className=\"card-img-top\"\n                        src={store.student.student.student.avatar}\n                        alt=\"Card image cap\"\n                      />\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title\">\n                          {store.student.student.student.name}\n                        </h5>\n                        <h5 className=\"card-title\">\n                          {store.student.student.student.registrationNumber}\n                        </h5>\n                        <Link to=\"/student/updateProfile\">UPDATE PROFILE</Link>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-7 bg-dark  text-white\">\n                    <table className=\"table \">\n                      <tbody className=\"text-white\">\n                        <tr>\n                          <td>Name</td>\n                          <td>{store.student.student.student.name}</td>\n                        </tr>\n                        <tr>\n                          <td>Email</td>\n                          <td>{store.student.student.student.email}</td>\n                        </tr>\n                        <tr>\n                          <td>Registration Number</td>\n                          <td>\n                            {store.student.student.student.registrationNumber}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Date Of Birth</td>\n                          <td>{store.student.student.student.dob}</td>\n                        </tr>\n                        <tr>\n                          <td>Year</td>\n                          <td>{store.student.student.student.year}</td>\n                        </tr>\n                        <tr>\n                          <td>Department</td>\n                          <td>{store.student.student.student.department}</td>\n                        </tr>\n                        <tr>\n                          <td>Section</td>\n                          <td>{store.student.student.student.section}</td>\n                        </tr>\n                        <tr>\n                          <td>Batch</td>\n                          <td>{store.student.student.student.batch}</td>\n                        </tr>\n                        <tr>\n                          <td>Gender</td>\n                          <td>\n                            {store.student.student.student.gender\n                              ? store.student.student.student.gender\n                              : \"NA\"}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Contact Number</td>\n                          <td>\n                            {store.student.student.student.studentMobileNumber\n                              ? store.student.student.student\n                                  .studentMobileNumber\n                              : \"NA\"}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Aadhar Card</td>\n                          <td>\n                            {store.student.student.student.aadharCard\n                              ? store.student.student.student.aadharCard\n                              : \"NA\"}{\" \"}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Father Name</td>\n                          <td>\n                            {store.student.student.student.fatherName\n                              ? store.student.student.student.fatherName\n                              : \"NA\"}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Father Contact Number</td>\n                          <td>\n                            {store.student.student.student.fatherMobileNumber\n                              ? store.student.student.student.fatherMobileNumber\n                              : \"NA\"}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-2\"></div>\n            </div>\n          </div>\n        </>\n      ) : (\n        history.push(\"/\")\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {fetchAttendence} from '../../redux/action/studentAction'\n\nimport axios from 'axios'\nimport StudentHomeHelper from './StudentHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst Home = () => {\n    const store = useSelector(store => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n      dispatch(fetchAttendence())  \n    },[])\n\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <StudentHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Subject Code</th>\n                                        <th scope=\"col\">Subject Name</th>\n                                        <th scope=\"col\">Maximum Hours</th>\n                                        <th scope=\"col\">Present Hours</th>\n                                        <th scope=\"col\">Absent Hours</th>\n                                        <th scope=\"col\">Total Hours</th>\n                                        <th scope=\"col\">Attendence</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.student.attendence.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.subjectCode}</td>\n                                                <td>{res.subjectName}</td>\n                                                <td>{res.maxHours}</td>\n                                                <td>{res.lectureAttended}</td>\n                                                <td>{res.absentHours}</td>\n                                                <td>{res.totalLecturesByFaculty}</td>\n                                                <td>{res.attendence}%</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </> : (history.push('/'))}\n           \n            \n        </div>\n\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport classnames from 'classnames'\nimport StudentHomeHelper from './StudentHomeHelper'\nimport { studentUpdatePassword } from '../../redux/action/studentAction'\n\n\n\n\nconst StudentUpdatePassword = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\n    const [error, setError] = useState({})\n\n    useEffect(() => {\n        if (store.errorHelper) {\n            setError(store.errorHelper)\n            console.log(store.errorHelper)\n        }\n    }, [store.errorHelper])\n    const formHandler = (e) => {\n        e.preventDefault()\n        dispatch(studentUpdatePassword({ registrationNumber: store.student.student.student.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\n    }\n    return (\n        <div>\n            {store.student.isAuthenticated ? <>\n                <StudentHomeHelper />\n                <div className=\"container m-5\">\n                    <div className=\"row m-5\">\n                        <div className=\"col-md-5 m-auto\">\n                            <form noValidate onSubmit={formHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailId\">Old Password</label>\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\n                                        {\n                                            'is-invalid': error.oldPassword\n\n                                        })} id=\"emailId\" />\n                                    {error.oldPassword && (<div className=\"invalid-feedback\">{error.oldPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordId\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.newPassword\n                                    })} type=\"password\" id=\"passwordId\" />\n                                    {error.newPassword && (<div className=\"invalid-feedback\">{error.newPassword}</div>)}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\n                                        \"is-invalid\": error.confirmNewPassword\n                                    })}  type=\"password\" id=\"passwordCId\" />\n                                    {error.confirmNewPassword && (<div className=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-info btn-block \">Update Password</button>\n                            </form>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n\n           \n\n        </div>\n    )\n}\n\nexport default StudentUpdatePassword\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport { studentUpdate, studentLogout } from '../../redux/action/studentAction'\nimport StudentHomeHelper from './StudentHomeHelper'\n\nimport { useHistory, withRouter } from 'react-router-dom'\n\nconst StudentUpdateProfile = () => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [gender, setGender] = useState('')\n    const [studentMobileNumber, setContactNumber] = useState('')\n    const [fatherName, setFatherName] = useState('')\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\n    const [aadharCard, setAadharCard] = useState('')\n    const [error, setError] = useState({})\n    const [avatar, setAvatar] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [modal, setModal] = useState(false)\n    const imagehandler = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0]\n            setAvatar(img)\n        }\n    }\n\n    useEffect(() => {\n        if (store.error) {\n            setError(store.error)\n        }\n    }, [store.error])\n\n    const formHandler = async(e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"gender\", gender)\n        formData.append(\"studentMobileNumber\", studentMobileNumber)\n        formData.append(\"fatherName\", fatherName)\n        formData.append(\"fatherMobileNumber\", fatherMobileNumber)\n        formData.append(\"aadharCard\", aadharCard)\n        formData.append(\"avatar\", avatar)\n        formData.append(\"email\", store.student.student.student.email)\n        dispatch(studentUpdate(formData, history))\n        setModal(true)\n        alert(\"Kindly login again to see updates\")\n        dispatch(studentLogout())\n        history.push('/')\n    }\n        return (\n            <div>\n                {store.student.isAuthenticated ? <>\n                    <StudentHomeHelper />\n                    <div className=\"container mt-5\">\n                        <div className=\"row \">\n                            <div className=\"col-md-5 w-100 m-auto\">\n                                <form onSubmit={formHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"inputId\">Profile Picture</label>\n                                        <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"genderId\">Gender</label>\n                                        <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\n                                            <option>Select</option>\n                                            <option value=\"Male\">Male</option>\n                                            <option value=\"Female\">Female</option>\n                                            <option value=\"Other\">Other</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"numberId\">Contact Number</label>\n                                        <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"fatherId\">Father Name</label>\n                                        <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" className=\"form-control\" id=\"fatherId\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"fathercnId\">Father Contact Number</label>\n                                        <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"aadharId\">Aadhar Card Number</label>\n                                        <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\n                                    </div>\n                                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </> : (history.push('/'))}\n                \n            </div>\n        )\n    }\n\nexport default withRouter(StudentUpdateProfile)\n","import React, {useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllSubjects } from '../../redux/action/studentAction'\nimport StudentHomeHelper from './StudentHomeHelper'\nimport { useHistory } from 'react-router-dom'\n\nconst StudentSubjectList = () => {\n    const store = useSelector((store) => store)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    useEffect(() => {\n       dispatch(getAllSubjects())\n    },[])\n    return (\n        <>\n            {store.student.isAuthenticated ? <>\n                <StudentHomeHelper />\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-6 m-auto\">\n                            <table className=\"table border\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">S.No</th>\n                                        <th scope=\"col\">Subject Code</th>\n                                        <th scope=\"col\">Subject Name</th>\n                                        <th scope=\"col\">Year</th>\n                                        <th scope=\"col\">Total Lectures</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        store.student.allSubjects.map((res, index) =>\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{res.subjectCode}</td>\n                                                <td>{res.subjectName}</td>\n                                                <td>{res.year}</td>\n                                                <td>{res.totalLectures}</td>\n                                            </tr>\n                                        )\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div></> : (history.push('/'))}\n           \n            </>\n    )\n}\n\nexport default StudentSubjectList\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getMarks } from \"../../redux/action/studentAction\";\nimport StudentHomeHelper from \"./StudentHomeHelper\";\nimport { useHistory } from \"react-router-dom\";\n\nconst StudentTestPerformance = () => {\n  const store = useSelector((store) => store);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMarks());\n  }, []);\n  return (\n    <>\n      {store.student.isAuthenticated ? (\n        <>\n          <StudentHomeHelper />\n\n          <div className=\"container\">\n            {store.student.allMarks.CycleTest1 && (\n              <div className=\"row mt-3\">\n                <div className=\"col-md-8 m-auto\">\n                  {store.student.allMarks.CycleTest1.length !== 0 ? (\n                    <>\n                      <h4>Cycle Test 1</h4>\n                      <table className=\"table border\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">S.No</th>\n                            <th scope=\"col\">Subject Code</th>\n                            <th scope=\"col\">Subject Name</th>\n                            <th scope=\"col\">Obtained Marks</th>\n                            <th scope=\"col\">Total Marks</th>\n                            <th scope=\"col\">Percentage</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {store.student.allMarks.CycleTest1.map(\n                            (res, index) => (\n                              <tr key={index}>\n                                <th scope=\"row\">{index + 1}</th>\n                                <td>{res.subject.subjectCode}</td>\n                                <td>{res.subject.subjectName}</td>\n                                <td>{res.marks}</td>\n                                <td>{res.totalMarks}</td>\n                                <td>{(res.marks / res.totalMarks) * 100}%</td>\n                              </tr>\n                            )\n                          )}\n                        </tbody>\n                      </table>\n                    </>\n                  ) : null}\n                </div>\n              </div>\n            )}\n\n            {store.student.allMarks.CycleTest2 && (\n              <div className=\"row mt-3\">\n                <div className=\"col-md-8 m-auto\">\n                  {store.student.allMarks.CycleTest2.length !== 0 ? (\n                    <>\n                      <h4>Cycle Test 2</h4>\n                      <table className=\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">S.No</th>\n                            <th scope=\"col\">Subject Code</th>\n                            <th scope=\"col\">Subject Name</th>\n                            <th scope=\"col\">Obtained Marks</th>\n                            <th scope=\"col\">Total Marks</th>\n                            <th scope=\"col\">Percentage</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {store.student.allMarks.CycleTest2.map(\n                            (res, index) => (\n                              <tr key={index}>\n                                <th scope=\"row\">{index + 1}</th>\n                                <td>{res.subject.subjectCode}</td>\n                                <td>{res.subject.subjectName}</td>\n                                <td>{res.marks}</td>\n                                <td>{res.totalMarks}</td>\n                                <td>{(res.marks / res.totalMarks) * 100}%</td>\n                              </tr>\n                            )\n                          )}\n                        </tbody>\n                      </table>\n                    </>\n                  ) : null}\n                </div>\n              </div>\n            )}\n\n            {store.student.allMarks.Semester && (\n              <div className=\"row mt-3\">\n                <div className=\"col-md-8 m-auto\">\n                  {store.student.allMarks.Semester.length !== 0 ? (\n                    <>\n                      <h4>Semester</h4>\n                      <table className=\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">S.No</th>\n                            <th scope=\"col\">Subject Code</th>\n                            <th scope=\"col\">Subject Name</th>\n                            <th scope=\"col\">Obtained Marks</th>\n                            <th scope=\"col\">Total Marks</th>\n                            <th scope=\"col\">Percentage</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {store.student.allMarks.Semester.map((res, index) => (\n                            <tr key={index}>\n                              <th scope=\"row\">{index + 1}</th>\n                              <td>{res.subject.subjectCode}</td>\n                              <td>{res.subject.subjectName}</td>\n                              <td>{res.marks}</td>\n                              <td>{res.totalMarks}</td>\n                              <td>\n                                {((res.marks / res.totalMarks) * 100).toFixed(\n                                  2\n                                )}\n                                %\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </>\n                  ) : null}\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      ) : (\n        history.push(\"/\")\n      )}\n    </>\n  );\n};\n\nexport default StudentTestPerformance;\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { getOTPStudent, submitOTPStudent } from '../redux/action/studentAction'\nimport { getOTPFaculty, submitOTPFaculty } from '../redux/action/facultyAction'\nimport classnames from 'classnames'\n\n\nconst ForgotPassword = (props) => {\n    const store = useSelector((store) => store)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [user, setUser] = useState('')\n    const [email, setEmail] = useState('')\n    const [otp, setOtp] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\n    const [errors, setErrors] = useState({})\n    const [helper, setHelper] = useState(false)\n\n    useEffect(() => {\n        setUser(props.match.params.user)\n    }, [user])\n\n    useEffect(() => {\n        if (store.error) {\n            setErrors(store.error)\n        }\n    }, [store.error])\n\n    useEffect(() => {\n        if (store.student.flag) {\n            setHelper(true)\n        }\n    },[store.student.flag])\n\n    const sendOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(getOTPStudent({ email }))\n        }\n        else if (user === \"faculty\") {\n           dispatch(getOTPFaculty({email}))\n        }\n    }\n\n    const submitOTPHandler = (e) => {\n        e.preventDefault()\n        if (user === \"student\") {\n            dispatch(submitOTPStudent({ email, otp, newPassword, confirmNewPassword },history))\n        }\n        else if (user === \"faculty\")\n        {\n            dispatch(submitOTPFaculty({ email, otp, newPassword, confirmNewPassword }, history))\n            }\n    }\n\n\n\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4 m-auto\">\n                    {!helper ? <>\n                        <form noValidate onSubmit={sendOTPHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail11\">Email</label>\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" className={classnames('form-control', {\n                                    'is-invalid': errors.email\n                                })} id=\"exampleInputEmail11\" placeholder=\"Provide our registered email\" aria-describedby=\"emailHelp\" />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">OTP will be only valid for 5 minute.</small>\n                                {errors.email && (\n                                    <div className=\"invalid-feedback\">{errors.email}</div>\n                                )}\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Send OTP</button>\n                        </form>\n                    </> : <>\n                            <form noValidate onSubmit={submitOTPHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail1\">OTP</label>\n                                    <input onChange={(e) => setOtp(e.target.value)} value={otp} type=\"number\" className={classnames('form-control', {\n                                        'is-invalid': errors.otp\n                                    })} id=\"exampleInputEmail1\" />\n                                    {errors.otp && (\n                                        <div className=\"invalid-feedback\">{errors.otp}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail2\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.newPassword\n                                    })} id=\"exampleInputEmail2\" />\n                                    {errors.newPassword && (\n                                        <div className=\"invalid-feedback\">{errors.newPassword}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail3\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.confirmNewPassword\n                                    })} id=\"exampleInputEmail3\" />\n                                    {errors.confirmNewPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>\n                                    )}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            </form>\n                        </>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ForgotPassword)\n","import React from 'react';\nimport {useSelector} from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './redux/utils/setAuthToken'\nimport store from './redux/store'\n\nimport { setFacultyUser, facultyLogout } from './redux/action/facultyAction'\n\nimport { setAdminUser, adminLogout } from './redux/action/adminAction'\n\nimport { setStudentUser, studentLogout } from './redux/action/studentAction'\n\n\nimport LoginPage from './Pages/Admin/LoginPage'\n\n\n\n\nimport AdminAddStudent from '../src/Pages/Admin/AdminAddStudent'\nimport AdminAddFaculty from '../src/Pages/Admin/AdminAddFaculty'\nimport AdminAddSubject from '../src/Pages/Admin/AdminAddSubject'\nimport AdminAddAdmin from '../src/Pages/Admin/AdminAddAdmin'\nimport AdminGetAllFaculty from '../src/Pages/Admin/AdminGetAllFaculty'\nimport AdminGetAllStudent from '../src/Pages/Admin/AdminGetAllStudents'\nimport AdminGetAllSubject from '../src/Pages/Admin/AdminGetAllSubjects'\nimport AdminHome from '../src/Pages/Admin/AdminHome'\n\nimport FacultyStudentLoginPags from '../src/Pages/Faculty/FacultyStudentLoginPags'\nimport FacultyUpdatePassword from '../src/Pages/Faculty/FacultyUpdatePassword'\nimport facultyInterface from '../src/Pages/Faculty/FacultyInterface'\nimport AttendenceFaculty from '../src/Pages/Faculty/AttendenceFaculty'\nimport FacultyUploadMarks from '../src/Pages/Faculty/FacultyUploadMarks'\nimport FacultyUpdateProfile from '../src/Pages/Faculty/FacultyUpdateProfile'\n\nimport Home from '../src/Pages/Student/StudentHome'\nimport StudentAttendencePage from '../src/Pages/Student/StudentAttendencePage'\nimport StudentUpdatePassword from '../src/Pages/Student/StudentUpdatePassword'\nimport StudentUpdateProfile from '../src/Pages/Student/StudentUpdateProfile'\nimport StudentSubjectList from '../src/Pages/Student/StudentSubjectList'\nimport StudentTestPerformace from '../src/Pages/Student/StudentTestPerformance'\n\n\nimport ForgotPassword from './Pages/ForgotPassword'\n\n\n \nif (window.localStorage.facultyJwtToken) {\n  setAuthToken(localStorage.facultyJwtToken);\n  const decoded = jwt_decode(localStorage.facultyJwtToken);\n \n  store.dispatch(setFacultyUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(facultyLogout());\n    window.location.href = '/';\n  }\n}\nelse if (window.localStorage.studentJwtToken) {\n  setAuthToken(localStorage.studentJwtToken);\n  const decoded = jwt_decode(localStorage.studentJwtToken);\n\n  store.dispatch(setStudentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(studentLogout());\n    window.location.href = '/';\n  } \n}\nelse if (window.localStorage.adminJwtToken) {\n  setAuthToken(localStorage.adminJwtToken);\n  const decoded = jwt_decode(localStorage.adminJwtToken);\n\n  store.dispatch(setAdminUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(adminLogout());\n    window.location.href = '/';\n  } \n}\n\nfunction App() {\n  const store = useSelector((store)=>store)\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={FacultyStudentLoginPags} />\n          <Route exact path='/home' component={Home} />\n          <Route exact path='/faculty' component={facultyInterface} />\n          <Route exact path='/attendenceFaculty' component={AttendenceFaculty} />\n          \n          <Route exact path='/admin' component={AdminHome} />\n          <Route exact path='/adminLogin' component={LoginPage} />\n          <Route exact path=\"/admin/addAdmin\" component={AdminAddAdmin} />\n          <Route exact path=\"/admin/addStudent\" component={AdminAddStudent} />\n          <Route exact path=\"/admin/addFaculty\" component={AdminAddFaculty} />\n          <Route exact path=\"/admin/addSubject\" component={AdminAddSubject} />\n          <Route exact path=\"/admin/allFaculties\" component={AdminGetAllFaculty} />\n          <Route exact path=\"/admin/allStudents\" component={AdminGetAllStudent} />\n          <Route exact path=\"/admin/allSubject\" component={AdminGetAllSubject} />\n          \n          \n          <Route exact path='/student/updateProfile' component={StudentUpdateProfile} />\n          <Route exact path=\"/student/attendence\" component={StudentAttendencePage} />\n          <Route exact path=\"/student/updatePassword\" component={StudentUpdatePassword} />\n          <Route exact path=\"/student/testPerformance\" component={StudentTestPerformace} />\n          <Route exact path=\"/student/getAllSubjects\" component={StudentSubjectList} />\n\n          <Route exact path=\"/faculty/updatePassword\" component={FacultyUpdatePassword} />\n          <Route exact path=\"/faculty/uploadMarks\" component={FacultyUploadMarks} />\n          <Route exact path=\"/faculty/updateProfile\" component={FacultyUpdateProfile} />\n\n          <Route exact path=\"/forgotPassword/:user\" component={ForgotPassword} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}